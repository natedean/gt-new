:root {
  --color-green: #4caf50;
  --color-red: #f44336;
}

.route {
  position: absolute;
  width: 100%;
}

button a {
  text-decoration: none;
  color: inherit;
}

.text-center {
  text-align: center;
}

.button-array button {
  margin-right: 1rem;
}

.button-array button:last-of-type {
  margin-right: 0;
}

.vertical-button-array {
  width: 25rem;
  margin: 0 auto;
}

.vertical-button-array button {
  width: 25rem;
}

.color-success {
  color: var(--color-green);
}

.color-failure {
  color: var(--color-red);
}

.answerButton {
  padding: 0 2em;
  margin-left: 1.5em;
  transition: all 0.4s;
  text-transform: none;
}

.answerButton:first-of-type {
  margin-left: 0;
}

.answerButton[disabled]:hover {
  border: 1px solid #bbb;
}

.answerButton--correct,
.answerButton.answerButton--correct:hover {
  color: var(--color-green);
  border: 1px solid var(--color-green);
}

.body-content-with-top-margin {
  margin: 10vh auto 0;
}

/* Animation classes */
.slideInFromRight {
  animation: slideInFromRight 1s;
}

.fadeIn {
  animation: fadeIn 0.75s;
}

/* Animation keyframes */
@keyframes slideUp {
  0% {
    opacity: 0;
    transform: translate3d(0,100%, 100vw); /* delay, for some reason, I can't get animation-delay to work */
  }
  50% {
    opacity: 0;
    transform: translate3d(0,100%, 100vw);
  }
  100% {
    opacity: 1;
    transform: translate3d(0,0,0);
  }
}

@keyframes slide-up {
  from {
    opacity: 0;
    transform: translate3d(0,100%, 100vw);
  }
  to {
    opacity: 1;
    transform: translate3d(0,0,0);
  }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes fade-out {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0);
  }
}

@keyframes pulse {
  0% { transform: scale(0.9); }
  50% { transform: scale(1); }
  100% { transform: scale(0.9); }
}

@keyframes animate-up {
  from {
    transform: scaleY(0);
  }
  to {
    transform: scaleY(1);
  }

}

@keyframes slideInFromRight {
  from { opacity: 0; transform: translate3d(100%,0, 100vw); }
  to { opacity: 1; transform: translate3d(0,0,0); }
}

/* MORE GLOBAL CLASSES */
.voiceRecognitionMessage {
  position: fixed;
  left: 1rem;
  bottom: 1rem;
  font-size: 1rem;
  color: gray;
}

.secondaryText {
  font-size: 1.2rem;
  color: rgba(1,1,1,.7);
}
